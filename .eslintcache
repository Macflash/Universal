[{"C:\\Users\\Alex\\universal\\src\\index.tsx":"1","C:\\Users\\Alex\\universal\\src\\reportWebVitals.ts":"2","C:\\Users\\Alex\\universal\\src\\App.tsx":"3","C:\\Users\\Alex\\universal\\src\\components\\planet.tsx":"4","C:\\Users\\Alex\\universal\\src\\components\\ball.tsx":"5","C:\\Users\\Alex\\universal\\src\\simplified\\galaxy.ts":"6","C:\\Users\\Alex\\universal\\src\\stuff\\tasks.ts":"7","C:\\Users\\Alex\\universal\\src\\simplified\\probe.ts":"8","C:\\Users\\Alex\\universal\\src\\stages\\SolarSystem.tsx":"9","C:\\Users\\Alex\\universal\\src\\stuff\\universe.ts":"10","C:\\Users\\Alex\\universal\\src\\components\\tabs.tsx":"11","C:\\Users\\Alex\\universal\\src\\components\\system.tsx":"12","C:\\Users\\Alex\\universal\\src\\setter.tsx":"13","C:\\Users\\Alex\\universal\\src\\stages\\EarthStage.tsx":"14","C:\\Users\\Alex\\universal\\src\\Resources.ts":"15","C:\\Users\\Alex\\universal\\src\\components\\section.tsx":"16","C:\\Users\\Alex\\universal\\src\\components\\action.tsx":"17","C:\\Users\\Alex\\universal\\src\\stuff\\tech.ts":"18"},{"size":500,"mtime":499162500000,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":4042,"mtime":1610296936483,"results":"22","hashOfConfig":"20"},{"size":5360,"mtime":1610302049775,"results":"23","hashOfConfig":"20"},{"size":837,"mtime":1609950250362,"results":"24","hashOfConfig":"20"},{"size":1989,"mtime":1609944809825,"results":"25","hashOfConfig":"20"},{"size":3217,"mtime":1610295602417,"results":"26","hashOfConfig":"20"},{"size":753,"mtime":1609809184989,"results":"27","hashOfConfig":"20"},{"size":6752,"mtime":1609995663449,"results":"28","hashOfConfig":"20"},{"size":2574,"mtime":1609963791138,"results":"29","hashOfConfig":"20"},{"size":1283,"mtime":1610005417080,"results":"30","hashOfConfig":"20"},{"size":1905,"mtime":1609911276437,"results":"31","hashOfConfig":"20"},{"size":1782,"mtime":1610296005776,"results":"32","hashOfConfig":"20"},{"size":4680,"mtime":1610005198281,"results":"33","hashOfConfig":"20"},{"size":1945,"mtime":1610296982737,"results":"34","hashOfConfig":"20"},{"size":1025,"mtime":1609943353083,"results":"35","hashOfConfig":"20"},{"size":3417,"mtime":1610302165011,"results":"36","hashOfConfig":"20"},{"size":2233,"mtime":1610301543854,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1npj9no",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Alex\\universal\\src\\index.tsx",[],["79","80"],"C:\\Users\\Alex\\universal\\src\\reportWebVitals.ts",[],"C:\\Users\\Alex\\universal\\src\\App.tsx",["81"],"C:\\Users\\Alex\\universal\\src\\components\\planet.tsx",["82","83","84","85","86","87","88"],"C:\\Users\\Alex\\universal\\src\\components\\ball.tsx",["89","90"],"import React from 'react';\r\nimport { Planet, SpaceObject } from '../stuff/universe';\r\n\r\nexport function BallView({ obj, size = 100, blur = 0 }: { obj: SpaceObject, blur?: number, size?: number }) {\r\n    return (\r\n        <div style={{ position: \"relative\" }}>\r\n            <div style={{\r\n                margin: 10,\r\n                backgroundColor: obj.img ? undefined : obj.color,\r\n                borderRadius: \"100%\",\r\n                height: size,\r\n                width: size,\r\n                filter: blur ? `blur(${blur}px)` : undefined,\r\n            }}>\r\n                {obj.img ? <img src={obj.img} height={size} width={size} /> : null}\r\n            </div>\r\n            {blur ? <div style={{  position: \"absolute\", top: 'calc(50% - 20px)', left: 'calc(50% - 15px)', fontSize: 30 }}>‚ùî</div> : null}\r\n        </div>\r\n    );\r\n}","C:\\Users\\Alex\\universal\\src\\simplified\\galaxy.ts",[],"C:\\Users\\Alex\\universal\\src\\stuff\\tasks.ts",[],"C:\\Users\\Alex\\universal\\src\\simplified\\probe.ts",[],"C:\\Users\\Alex\\universal\\src\\stages\\SolarSystem.tsx",["91","92","93","94","95","96"],"import React from \"react\";\r\nimport { PlanetView, SpaceObjectView, StatRow } from \"../components/planet\";\r\nimport { System } from \"../components/system\";\r\nimport { Money, Year } from \"../Resources\";\r\nimport { BILLION, MILLION, Planet, Probe, ROUND, SpaceObject, Star } from \"../stuff/universe\";\r\nimport { ResearchOption } from \"./EarthStage\";\r\nimport mercuryimg from \"../images/mercuryimg.png\";\r\nimport earthimg from \"../images/earthimg.png\";\r\nimport moonimg from \"../images/moonimg.png\";\r\nimport { Tabs } from \"../components/tabs\";\r\n\r\nexport const Mercury: Planet = {\r\n    name: \"Mercury\",\r\n    img: mercuryimg,\r\n    color: \"grey\",\r\n    age: 4 * BILLION,\r\n    distance: 61.157 * MILLION,\r\n    type: \"rocky\",\r\n    diameter: 4879,\r\n    mass: 3.285e23,\r\n    percentUtilization: 0,\r\n    fullyUtilized: false,\r\n    availableProbes: [],\r\n    incomingProbes: []\r\n};\r\n\r\nexport const Venus: Planet = {\r\n    name: \"Venus\",\r\n    color: \"bisque\",\r\n    age: 4 * BILLION,\r\n    distance: 108.44 * MILLION,\r\n    type: \"venuslike\",\r\n    diameter: 12104,\r\n    mass: 4.867e24,\r\n    percentUtilization: 0,\r\n    fullyUtilized: false,\r\n    availableProbes: [],\r\n    incomingProbes: []\r\n};\r\n\r\nexport const Moon: Planet = {\r\n    name: \"Moon\",\r\n    img: moonimg,\r\n    color: \"grey\",\r\n    age: 4 * BILLION,\r\n    distance: 384400,\r\n    type: \"rocky\",\r\n    diameter: 3474,\r\n    mass: 7.348e22,\r\n    percentUtilization: 0,\r\n    fullyUtilized: false,\r\n    availableProbes: [],\r\n    incomingProbes: []\r\n};\r\n\r\nexport const Earth: Planet = {\r\n    name: \"Earth\",\r\n    img: earthimg,\r\n    color: \"#18F\",\r\n    age: 4 * BILLION,\r\n    distance: 149.6 * MILLION,\r\n    type: \"rocky\",\r\n    diameter: 12742,\r\n    mass: 5.972e24,\r\n    percentUtilization: .5,\r\n    fullyUtilized: false,\r\n    availableProbes: [],\r\n    incomingProbes: [],\r\n    moons: [Moon],\r\n    research: {\r\n        discovered: true,\r\n        studied: \"human\",\r\n        picture: \"none\",\r\n        temperature: \"human\",\r\n        soil: \"human\",\r\n        water: \"human\",\r\n        atmosphere: \"human\",\r\n    }\r\n};\r\n\r\nexport const Mars: Planet = {\r\n    name: \"Mars\",\r\n    color: \"red\",\r\n    age: 4 * BILLION,\r\n    distance: 228.16 * MILLION,\r\n    type: \"rocky\",\r\n    diameter: 6779,\r\n    mass: 6.39e23,\r\n    percentUtilization: 0,\r\n    fullyUtilized: false,\r\n    availableProbes: [],\r\n    incomingProbes: []\r\n};\r\n\r\n\r\nexport const Jupiter: Planet = {\r\n    name: \"Jupiter\",\r\n    color: \"orange\",\r\n    age: 4 * BILLION,\r\n    distance: 762.51 * MILLION,\r\n    type: \"gasgiant\",\r\n    diameter: 139820,\r\n    mass: 1.898e27,\r\n    percentUtilization: 0,\r\n    fullyUtilized: false,\r\n    availableProbes: [],\r\n    incomingProbes: []\r\n};\r\n\r\nexport const Saturn: Planet = {\r\n    name: \"Saturn\",\r\n    color: \"tan\",\r\n    age: 4 * BILLION,\r\n    distance: 926.57 * MILLION,\r\n    type: \"gasgiant\",\r\n    diameter: 116360,\r\n    mass: 5.683e26,\r\n    percentUtilization: 0,\r\n    fullyUtilized: false,\r\n    availableProbes: [],\r\n    incomingProbes: []\r\n};\r\n\r\nexport const Uranus: Planet = {\r\n    name: \"Uranus\",\r\n    color: \"lightblue\",\r\n    age: 4 * BILLION,\r\n    distance: 2.9575 * BILLION,\r\n    type: \"gasgiant\",\r\n    diameter: 50724,\r\n    mass: 8.681e25,\r\n    percentUtilization: 0,\r\n    fullyUtilized: false,\r\n    availableProbes: [],\r\n    incomingProbes: []\r\n};\r\n\r\nexport const Neptune: Planet = {\r\n    name: \"Neptune\",\r\n    color: \"blue\",\r\n    age: 4 * BILLION,\r\n    distance: 4.4759 * BILLION,\r\n    type: \"gasgiant\",\r\n    diameter: 49244,\r\n    mass: 1.024e26,\r\n    percentUtilization: 0,\r\n    fullyUtilized: false,\r\n    availableProbes: [],\r\n    incomingProbes: []\r\n};\r\n\r\nexport const Sun = {\r\n    name: \"Sun\",\r\n    color: \"yellow\",\r\n    age: 4.5 * BILLION,\r\n    distance: 0,\r\n    type: \"sunlike\",\r\n    death: 7.5 * BILLION,\r\n    mass: 1.989e30, // KG\r\n    diameter: 1391000, // KM\r\n    incomingProbes: [],\r\n    planets: [\r\n        Mercury,\r\n        Venus,\r\n        Earth,\r\n        Mars,\r\n        Jupiter,\r\n        Saturn,\r\n        Uranus,\r\n        Neptune,\r\n    ],\r\n} as Star;\r\n\r\nexport function SolarSystem(props: { star: Star }) {\r\n    const launchCost = .1;\r\n    return <div>\r\n        <div style={{ position: \"relative\" }}>\r\n            <System star={props.star} />\r\n        </div>\r\n\r\n        <Tabs tabs={\r\n            [\r\n                {\r\n                    title: \"Sun\",\r\n                    content: <PlanetView planet={props.star as any} />\r\n                } ,\r\n                ...props.star.planets.map(p => ({\r\n                    title: p.name && p.research?.discovered ? p.name :\"?\",\r\n                    content: <div>\r\n                        <PlanetView planet={p} />\r\n                        \r\n                    </div>\r\n                }))\r\n            ]\r\n        } />\r\n\r\n    </div>\r\n}\r\n/*\r\n{p.incomingProbes.map(probe => <ProbeView probe={probe} />)}\r\n{p !== Earth ?\r\n    <button\r\n        style={{ cursor: \"pointer\" }}\r\n        disabled={Earth.availableProbes.length === 0 || Money.current < launchCost}\r\n        onClick={() => {\r\n            const probe = Earth.availableProbes.pop()!;\r\n            probe.launchYear = Year.current;\r\n            probe.arrivalYear = Year.current + Math.abs(p.distance - Earth.distance) / 8.76e7;\r\n            p.incomingProbes.push(probe);\r\n            Money.Subtract(launchCost);\r\n        }}\r\n    >Launch probe\r\n    ({launchCost} billion {Money.icon})\r\n    ({ROUND(Math.abs(p.distance - Earth.distance) / 8.76e7)} years)\r\n    </button>\r\n    : null}\r\n    */\r\n\r\nexport function ProbeView({ probe }: { probe: Probe }) {\r\n    return <div>\r\n        <div>üõ∞Ô∏è</div>\r\n        <StatRow name=\"Launched\" stat={probe.launchYear} round={1} />\r\n        <StatRow name={probe.arrivalYear! < Year.current ? \"Arrived\" : \"Arriving\"} stat={probe.arrivalYear} round={1} />\r\n        <ProbeProgressBar probe={probe} />\r\n    </div>\r\n}\r\n\r\nexport function ProbeProgressBar({ probe }: { probe: Probe }) {\r\n    if (Year.current > probe.arrivalYear! + 5) { return null; }\r\n    let color = \"red\";\r\n    if (Year.current > probe.arrivalYear!) { color = \"green\"; }\r\n    const progress = (probe.arrivalYear! - Year.current) / (probe.arrivalYear! - probe.launchYear!);\r\n    return <div style={{ display: \"flex\", marginRight: 10, backgroundColor: \"grey\" }}>\r\n        <div style={{ width: (100 - (progress * 100)) + \"%\", height: 10, backgroundColor: color }}></div>\r\n    </div>\r\n}\r\n\r\n// this defines what we have actually DISCOVERED and sent there.\r\nexport type level = \"none\" | \"telescope\" | \"probe\" | \"lander\" | \"returned sample\" | \"human\";\r\nexport interface PlanetResearch {\r\n    /** This starts false */\r\n    discovered: boolean,\r\n\r\n    /** after study, you can now send probes there, etc */\r\n    studied: level,\r\n\r\n    picture: level,\r\n    temperature: level,\r\n    atmosphere: level,\r\n    soil: level,\r\n    water: level,\r\n}","C:\\Users\\Alex\\universal\\src\\stuff\\universe.ts",[],"C:\\Users\\Alex\\universal\\src\\components\\tabs.tsx",[],"C:\\Users\\Alex\\universal\\src\\components\\system.tsx",[],"C:\\Users\\Alex\\universal\\src\\setter.tsx",["97"],"C:\\Users\\Alex\\universal\\src\\stages\\EarthStage.tsx",["98","99","100","101","102"],"import React from 'react';\r\nimport { Earth } from './SolarSystem';\r\nimport { Budget, Money, Research, Year } from '../Resources';\r\nimport { PlanetView, StatRow } from '../components/planet';\r\nimport { ManufacturingQueue, ResearchQueue, Task, TaskQueue } from '../stuff/tasks';\r\nimport { Section } from '../components/section';\r\nimport { QueuedBlockingAction } from '../components/action';\r\nimport { MONTH } from '../setter';\r\nimport { Tech } from '../stuff/tech';\r\n\r\nexport function EarthStage(props: {}) {\r\n    return <Section title=\"Earth\">\r\n        <PlanetView planet={Earth} />\r\n\r\n        <div style={{ borderBottom: \"2px solid grey\" }}></div>\r\n        <Probes />\r\n        <EarthManufacturing />\r\n        <ResearchStore />\r\n    </Section>\r\n}\r\n\r\n// so we should have like a STORE\r\n\r\nexport function Probes(props: {}) {\r\n    return <Section title=\"Inventory\">\r\n        <div>\r\n            Ground telescopes available: {Earth.availableTelescopes?.filter(t => t.type == 'ground').length || 0} üî≠\r\n        </div>\r\n        <div>\r\n            Probes available: {Earth.availableProbes.length} üõ∞Ô∏è\r\n        </div>\r\n    </Section>\r\n}\r\n\r\nexport function EarthManufacturing(props: {}) {\r\n    // manufacturing has say... some fixed number of slots that can be used\r\n    return <Section title=\"Manufacture\">\r\n        {!Earth.availableTelescopes?.filter(t => t.type == 'ground').length ?\r\n            <QueuedBlockingAction\r\n                name=\"Ground telescope\"\r\n                description=\"Build a telescope on Earth to allow you to look at distant objects.\"\r\n                money={1}\r\n                time={2 * MONTH}\r\n                queue={ManufacturingQueue}\r\n                onComplete={() => {\r\n                    Earth.availableTelescopes = Earth.availableTelescopes || [];\r\n                    Earth.availableTelescopes!.push({ manufactureDate: Year.current, condition: 1, type: \"ground\", quality: \"blurry\" });\r\n                }}\r\n            /> :\r\n            <QueuedBlockingAction\r\n                name=\"Space probe\"\r\n                description=\"Build a probe that you can launch to other planets to perform research.\"\r\n                money={1}\r\n                time={1}\r\n                queue={ManufacturingQueue}\r\n                onComplete={() => {\r\n                    Earth.availableProbes.push({ manufactureDate: Year.current });\r\n                }}\r\n            />\r\n        }\r\n    </Section>\r\n}\r\n\r\n\r\n// so we should have like a STORE\r\n\r\nexport function ResearchStore(props: {}) {\r\n    const moneyStuff = <>\r\n        <QueuedBlockingAction\r\n            name=\"Raise funds\"\r\n            description={`Raise ${1} billion üí≤`}\r\n            research={1}\r\n            time={.5}\r\n            queue={ResearchQueue}\r\n            onComplete={() => { Money.Add(1) }}\r\n            buyText=\"Start\"\r\n        />\r\n        <QueuedBlockingAction\r\n            name=\"Increase budget\"\r\n            description={`Increases the monthly budget by ${.1} billion üí≤`}\r\n            money={1}\r\n            research={1}\r\n            time={.5}\r\n            queue={ResearchQueue}\r\n            onComplete={() => { Budget.Add(.1); }}\r\n        />\r\n    </>;\r\n    return <Section title=\"Research\">\r\n        {Tech.All.filter(tech => tech.canBuy && !tech.unlocked).map(tech => <QueuedBlockingAction\r\n            name={tech.id}\r\n            onComplete={() => { tech.unlock() }}\r\n            queue={ResearchQueue}\r\n            time={tech.researchTime}\r\n            research={tech.researchCost}\r\n        />)}\r\n    </Section>\r\n}\r\n\r\nexport function ResearchOption(props: { name: string, money?: number, research?: number, onBuy?: () => void }) {\r\n    const hasEnoughMoney = !props.money || Money.current >= props.money;\r\n    const hasEnoughResearch = !props.research || Research.current >= props.research;\r\n    const canAfford = hasEnoughMoney && hasEnoughResearch;\r\n\r\n    return <div style={{ margin: 10, padding: 10, border: \"2px solid grey\" }}>\r\n        <div>{props.name}</div>\r\n        <StatRow name=\"Money\" stat={props.money} unit={Money.icon} color={hasEnoughMoney ? undefined : \"red\"} />\r\n        <StatRow name=\"Research\" stat={props.research} unit={Research.icon} color={hasEnoughResearch ? undefined : \"red\"} />\r\n        <button\r\n            style={{ cursor: \"pointer\" }}\r\n            disabled={!canAfford}\r\n            onClick={() => {\r\n                if (Money.current >= (props.money || 0) && Research.current >= (props.research || 0)) {\r\n                    Money.Subtract(props.money || 0);\r\n                    Research.Subtract(props.research || 0);\r\n                    props.onBuy?.();\r\n                }\r\n            }}\r\n        >\r\n            Buy\r\n        </button>\r\n    </div>\r\n}","C:\\Users\\Alex\\universal\\src\\Resources.ts",[],"C:\\Users\\Alex\\universal\\src\\components\\section.tsx",["103","104"],"import React from 'react';\r\n\r\nexport const backgroundColor = \"grey\";\r\nexport const border = `2px solid ${backgroundColor}`;\r\nexport const margin = 5;\r\nexport const padding = margin;\r\nexport const marginTop = margin;\r\nexport const marginBottom = margin;\r\nexport const paddingBottom = margin;\r\nexport const titleFontSize = '125%';\r\n\r\nexport const Section: React.FC<{ title: string, unlocked?: boolean }> = ({title, children, unlocked = true}) => {\r\n    return <div style={{ borderBottom: border, marginBottom, marginTop, paddingBottom }}>\r\n        <SectionHeader title={title} />\r\n        {unlocked ? children : \"Locked\"}\r\n    </div>;\r\n}\r\n\r\nexport function SectionHeader(props: { title?: string, size?: number }) {\r\n    return props.title && <div style={{ fontSize: props.size ? `${props.size * 100}%` : titleFontSize, marginBottom }}>\r\n        {props.title}\r\n    </div> || null;\r\n}\r\n\r\nexport const Block: React.FC<{ }> = ({children}) => {\r\n    return <div style={{padding, margin, border}}>\r\n        {children}\r\n    </div>;\r\n}","C:\\Users\\Alex\\universal\\src\\components\\action.tsx",["105"],"C:\\Users\\Alex\\universal\\src\\stuff\\tech.ts",["106","107","108","109"],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":8,"column":35,"nodeType":"116","messageId":"117","endLine":8,"endColumn":41},{"ruleId":"114","severity":1,"message":"118","line":4,"column":17,"nodeType":"116","messageId":"117","endLine":4,"endColumn":31},{"ruleId":"119","severity":1,"message":"120","line":29,"column":23,"nodeType":"121","messageId":"122","endLine":29,"endColumn":25},{"ruleId":"119","severity":1,"message":"120","line":31,"column":12,"nodeType":"121","messageId":"122","endLine":31,"endColumn":14},{"ruleId":"123","severity":1,"message":"124","line":59,"column":53,"nodeType":"125","messageId":"126","endLine":59,"endColumn":55},{"ruleId":"123","severity":1,"message":"127","line":85,"column":140,"nodeType":"125","messageId":"126","endLine":85,"endColumn":142},{"ruleId":"128","severity":1,"message":"129","line":102,"column":39,"nodeType":"130","messageId":"131","endLine":102,"endColumn":61},{"ruleId":"128","severity":1,"message":"129","line":107,"column":39,"nodeType":"130","messageId":"131","endLine":107,"endColumn":62},{"ruleId":"114","severity":1,"message":"132","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":16},{"ruleId":"133","severity":1,"message":"134","line":15,"column":28,"nodeType":"135","endLine":15,"endColumn":76},{"ruleId":"114","severity":1,"message":"136","line":2,"column":22,"nodeType":"116","messageId":"117","endLine":2,"endColumn":37},{"ruleId":"114","severity":1,"message":"137","line":4,"column":10,"nodeType":"116","messageId":"117","endLine":4,"endColumn":15},{"ruleId":"114","severity":1,"message":"138","line":5,"column":43,"nodeType":"116","messageId":"117","endLine":5,"endColumn":48},{"ruleId":"114","severity":1,"message":"139","line":5,"column":50,"nodeType":"116","messageId":"117","endLine":5,"endColumn":61},{"ruleId":"114","severity":1,"message":"140","line":6,"column":10,"nodeType":"116","messageId":"117","endLine":6,"endColumn":24},{"ruleId":"114","severity":1,"message":"141","line":175,"column":11,"nodeType":"116","messageId":"117","endLine":175,"endColumn":21},{"ruleId":"114","severity":1,"message":"142","line":82,"column":11,"nodeType":"116","messageId":"117","endLine":82,"endColumn":15},{"ruleId":"114","severity":1,"message":"143","line":5,"column":45,"nodeType":"116","messageId":"117","endLine":5,"endColumn":49},{"ruleId":"114","severity":1,"message":"144","line":5,"column":51,"nodeType":"116","messageId":"117","endLine":5,"endColumn":60},{"ruleId":"123","severity":1,"message":"124","line":27,"column":89,"nodeType":"125","messageId":"126","endLine":27,"endColumn":91},{"ruleId":"123","severity":1,"message":"124","line":38,"column":57,"nodeType":"125","messageId":"126","endLine":38,"endColumn":59},{"ruleId":"114","severity":1,"message":"145","line":68,"column":11,"nodeType":"116","messageId":"117","endLine":68,"endColumn":21},{"ruleId":"119","severity":1,"message":"120","line":20,"column":24,"nodeType":"121","messageId":"122","endLine":20,"endColumn":26},{"ruleId":"119","severity":1,"message":"120","line":22,"column":12,"nodeType":"121","messageId":"122","endLine":22,"endColumn":14},{"ruleId":"114","severity":1,"message":"146","line":45,"column":11,"nodeType":"116","messageId":"117","endLine":45,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":21,"column":13,"nodeType":"130","messageId":"131","endLine":21,"endColumn":47},{"ruleId":"123","severity":1,"message":"124","line":26,"column":66,"nodeType":"125","messageId":"126","endLine":26,"endColumn":68},{"ruleId":"114","severity":1,"message":"147","line":42,"column":9,"nodeType":"116","messageId":"117","endLine":42,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":48,"column":15,"nodeType":"125","messageId":"126","endLine":48,"endColumn":17},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"@typescript-eslint/no-unused-vars","'RunDay' is defined but never used.","Identifier","unusedVar","'PlanetResearch' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'Planet' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SpaceObjectView' is defined but never used.","'Money' is defined but never used.","'ROUND' is defined but never used.","'SpaceObject' is defined but never used.","'ResearchOption' is defined but never used.","'launchCost' is assigned a value but never used.","'name' is assigned a value but never used.","'Task' is defined but never used.","'TaskQueue' is defined but never used.","'moneyStuff' is assigned a value but never used.","'progress' is assigned a value but never used.","'cost' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]